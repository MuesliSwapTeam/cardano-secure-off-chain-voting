"""
Test trustee keys
"""

import sys
sys.path.append('../')

import simplejson

from crypto.algs import *

pk_and_pok_str= """
{"pok": {"challenge": "778208789369087605151906888829325203205805515826", "commitment": "965317593566566549799271600723214912403202571352637894862227188577968319177846847087241407051268022470123896943320129968981906233301678607613023936248589910836737480870024348732401562330106193274085447975790068248809608314981188795601871724110637122437954154305284769245686904877794634487564136032218731656324244926143039218688938347890059440870080705644323317874495119058375300328229081911848635683772930316822917655505938179899206223214359927996076562044392285546436960885546621144086206574015545907534864091424911000557832937053572921941342720450140502943942027255531954195512940050279263176898583654388183235467", "response": "39231743035001153818458696383326864438879679030327718006584358276515954647136"}, "public_key": {"g": "14887492224963187634282421537186040801304008017743492304481737382571933937568724473847106029915040150784031882206090286938661464458896494215273989547889201144857352611058572236578734319505128042602372864570426550855201448111746579871811249114781674309062693442442368697449970648232621880001709535143047913661432883287150003429802392229361583608686643243349727791976247247948618930423866180410558458272606627111270040091203073580238905303994472202930783207472394578498507764703191288249547659899997131166130259700604433891232298182348403175947450284433411265966789131024573629546048637848902243503970966798589660808533", "p": "16328632084933010002384055033805457329601614771185955389739167309086214800406465799038583634953752941675645562182498120750264980492381375579367675648771293800310370964745767014243638518442553823973482995267304044326777047662957480269391322789378384619428596446446984694306187644767462460965622580087564339212631775817895958409016676398975671266179637898557687317076177218843233150695157881061257053019133078545928983562221396313169622475509818442661047018436264806901023966236718367204710755935899013750306107738002364137917426595737403871114187750804346564731250609196846638183903982387884578266136503697493474682071", "q": "61329566248342901292543872769978950870633559608669337131139375508370458778917", "y": "4406435458139473066988402792060943356195035555327597131362818507866414189189109553406231370159223429044361827447627586529803619848020506631164425199981841892074971012781759866846673685330868031075334670446728139708840730188995074081695113461064941514577265633515931162029257814215039323627192686063247816529780585968725549770763189640199460917046483369600590028250120071304037486025312215731462659703451311658012630558565080003702513772418160362308339875523821928219224437860788036204725217342479561715761747692955395140767190432238548218849050573556544734931729789609386820776053173278332173883060542776506220656754"}}
"""

pk_and_pok = simplejson.loads(pk_and_pok_str)

pk = EGPublicKey.from_dict(pk_and_pok['public_key'])
pok = DLogProof.from_dict(pk_and_pok['pok'])

print pk.verify_sk_proof(pok, DLog_challenge_generator)